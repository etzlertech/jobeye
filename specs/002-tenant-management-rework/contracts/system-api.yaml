openapi: 3.0.0
info:
  title: System Admin Tenant API
  version: 1.0.0
  description: System administrator endpoints for tenant management

paths:
  /api/system/tenants:
    get:
      summary: List all tenants
      tags: [System Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, suspended, cancelled]
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: List of tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
                  total:
                    type: integer
    
    post:
      summary: Create new tenant
      tags: [System Admin]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, slug, adminEmail]
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 100
                slug:
                  type: string
                  pattern: '^[a-z0-9-]{3,50}$'
                plan:
                  type: string
                  enum: [free, starter, pro, enterprise]
                  default: free
                adminEmail:
                  type: string
                  format: email
      responses:
        201:
          description: Tenant created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

  /api/system/tenants/{tenantId}:
    patch:
      summary: Update tenant
      tags: [System Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                  enum: [active, suspended, cancelled]
                plan:
                  type: string
                  enum: [free, starter, pro, enterprise]
                settings:
                  type: object
      responses:
        200:
          description: Tenant updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

  /api/system/tenants/{tenantId}/members:
    post:
      summary: Add user to tenant
      tags: [System Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, role]
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum: [member, tenant_admin]
      responses:
        201:
          description: Member added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantMember'

  /api/system/users/{userId}/tenant:
    patch:
      summary: Move user to different tenant
      tags: [System Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tenantId]
              properties:
                tenantId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum: [member, tenant_admin]
                  default: member
      responses:
        200:
          description: User moved to new tenant

components:
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        status:
          type: string
          enum: [active, suspended, cancelled]
        plan:
          type: string
          enum: [free, starter, pro, enterprise]
        settings:
          type: object
        memberCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TenantMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        tenantId:
          type: string
          format: uuid
        role:
          type: string
          enum: [member, tenant_admin]
        status:
          type: string
          enum: [active, pending, deactivated]
        joinedAt:
          type: string
          format: date-time
        user:
          type: object
          properties:
            email:
              type: string
            name:
              type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Requires system_admin role in JWT metadata