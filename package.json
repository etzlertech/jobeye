{
  "name": "jobeye",
  "version": "3.2.1",
  "description": "Voice-First Field Service Management System",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "build:production": "next build",
    "start": "next start",
    "start:production": "next start",
    "start:standalone": "node server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern='^((?!integration).)*\\.test\\.[jt]sx?$'",
    "test:integration": "jest --testPathPattern='integration.*\\.test\\.[jt]sx?$'",
    "test:integration:real": "node run-integration-tests.js",
    "test:integration:auth": "node run-integration-tests.js auth",
    "test:integration:customer": "node run-integration-tests.js customer",
    "test:integration:property": "node run-integration-tests.js property",
    "test:integration:tenant": "node run-integration-tests.js multi-tenant",
    "test:integration:voice": "node run-integration-tests.js voice",
    "test:all": "./scripts/run-tests.sh",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "test:e2e": "playwright test",
    "test:rls": "tsx scripts/ci/rls-test-harness.ts",
    "scaffold:inject": "tsx scripts/dev/scaffold-aac.ts",
    "lint:directives": "tsx scripts/ci/lint-directives.ts",
    "validate:deps": "tsx scripts/dev/validate-dependencies.ts",
    "generate:types": "supabase gen types typescript --local > src/types/supabase.ts",
    "generate:erd": "tsx scripts/dev/generate-erd.sh",
    "generate:erd-from-skeletons": "tsx scripts/dev/generate-erd-from-headers.ts",
    "db:migrate": "supabase db push",
    "db:migrate:manual": "tsx scripts/run-migrations.ts --print",
    "db:check": "tsx scripts/check-db-status.ts",
    "db:reset": "supabase db reset",
    "edge:serve": "supabase functions serve",
    "edge:deploy": "supabase functions deploy",
    "check:complexity": "find src -name '*.ts' -o -name '*.tsx' | xargs wc -l | sort -rn | head -20",
    "check:security": "tsx scripts/security/check-dependencies.sh",
    "check:context": "tsx scripts/dev/context-check.sh",
    "check:db-actual": "tsx scripts/check-actual-db.ts",
    "cleanup:analyze-schema": "tsx scripts/validation/analyze-schema.ts",
    "cleanup:analyze-code": "tsx scripts/validation/analyze-code-patterns.ts",
    "cleanup:find-orphaned": "tsx scripts/validation/find-orphaned-tables.ts",
    "cleanup:migrate-tenant": "tsx scripts/migrations/migrate-company-to-tenant.ts",
    "cleanup:update-rls": "tsx scripts/migrations/update-rls-policies.ts",
    "cleanup:rollback": "tsx scripts/migrations/rollback-tenant-migration.ts",
    "cleanup:convert-repos": "tsx scripts/migrations/convert-to-class-repository.ts",
    "cleanup:remove-orphaned": "tsx scripts/migrations/remove-orphaned-tables.ts",
    "cleanup:scan-violations": "tsx scripts/validation/scan-violations.ts",
    "cleanup:full-analysis": "npm run cleanup:analyze-schema && npm run cleanup:analyze-code && npm run cleanup:find-orphaned",
    "analyze:supabase": "tsx supabase-analysis/scripts/analyze-supabase-live.ts",
    "analyze:supabase:migrations": "tsx supabase-analysis/scripts/analyze-supabase-complete.ts",
    "analyze:supabase:simple": "tsx supabase-analysis/scripts/analyze-supabase.ts",
    "analyze:supabase:enhanced": "tsx supabase-analysis/scripts/analyze-supabase-enhanced.ts",
    "analyze:db-mapping": "tsx supabase-analysis/scripts/analyze-db-code-mapping.ts",
    "report:skeleton-status": "tsx scripts/dev/skeleton-status.ts",
    "report:api-surface": "tsx scripts/dev/report-api-surface.ts",
    "report:voice-coverage": "grep -rn \"voice_considerations:\" src --include=\"*.ts\" --include=\"*.tsx\" | wc -l",
    "report:progress": "tsx scripts/dev/generate-progress-manifest.ts",
    "report:detailed": "tsx scripts/dev/generate-detailed-manifest.ts",
    "build:spec": "tsx scripts/dev/build-spec.sh",
    "type-check": "tsc --noEmit",
    "type-check:strict": "tsc --noEmit --strict",
    "type-check:next": "next build --debug",
    "test:railway": "bash scripts/test-like-railway.sh",
    "pre-commit": "tsx scripts/ci/fast-pre-commit.ts",
    "pre-commit:full": "tsx scripts/ci/pre-commit-checks.ts",
    "verify:cleanup": "tsx scripts/ci/verify-cleanup.ts",
    "quick-check": "bash scripts/ci/type-check.sh",
    "prepare": "husky",
    "rls:seed": "tsx supabase/.temp/seed_only.mjs",
    "rls:verify": "tsx supabase/.temp/verify_rls.mjs",
    "rls:cleanup": "tsx supabase/.temp/cleanup_rls.mjs",
    "rls:lint": "tsx scripts/ci/rls-lint.ts",
    "rls:full": "npm run rls:seed && npm run rls:verify && npm run rls:cleanup && npm run test:rls -- company_settings && npm run rls:lint",
    "db:check:actual": "tsx scripts/check-actual-db.ts",
    "ocr:preflight": "tsx scripts/ocr-preflight-check.ts",
    "ocr:migrate": "npx supabase db push",
    "railway:monitor": "tsx scripts/railway-monitor.ts monitor",
    "railway:build-logs": "tsx scripts/railway-monitor.ts build-logs",
    "railway:deploy-logs": "tsx scripts/railway-monitor.ts deploy-logs",
    "railway:latest": "tsx scripts/railway-monitor.ts latest",
    "railway:check": "tsx scripts/railway-check-latest.ts",
    "ocr:types": "npx supabase gen types typescript --linked --schema public > src/types/supabase.ts",
    "ocr:seed": "node scripts/ocr-seed.mjs",
    "ocr:full": "npm run ocr:migrate && npm run ocr:types && npm run ocr:seed && npm run ocr:preflight && npm run rls:full",
    "lint:migrations": "tsx scripts/ci/check-migrations.ts",
    "003:seed": "dotenv -e .env.local -- node scripts/seed-003.mjs",
    "003:preflight": "dotenv -e .env.local -- tsx scripts/preflight-003.ts",
    "003:full": "dotenv -e .env.local -- sh -c \"npm run 003:seed && npm run 003:preflight && jest --runTestsByPath tests/integration/scheduling-kits/kitRepo.int.test.ts tests/integration/scheduling-kits/kitService.int.test.ts tests/api/scheduling-kits.api.test.ts\"",
    "003:rls": "dotenv -e .env.local -- tsx scripts/ci/rls-lint.ts",
    "ui:review": "tsx scripts/ui-review/browser-service.ts",
    "ui:test": "tsx scripts/ui-review/railway-ui-test.ts",
    "ui:capture": "tsx scripts/ui-review/browser-service.ts"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.65.0",
    "@deepgram/sdk": "^4.11.2",
    "@google/generative-ai": "^0.24.1",
    "@mapbox/mapbox-sdk": "^0.15.6",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/supabase-js": "^2.43.0",
    "@tanstack/react-query": "^5.90.2",
    "@tensorflow/tfjs": "^4.22.0",
    "@types/node": "^20.0.0",
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.0",
    "date-fns": "^3.6.0",
    "dexie": "^4.2.0",
    "fuse.js": "^7.1.0",
    "idb": "^8.0.3",
    "js-yaml": "^4.1.0",
    "lucide-react": "^0.544.0",
    "mapbox-gl": "^3.15.0",
    "next": "14.2.0",
    "onnxruntime-web": "^1.23.0",
    "openai": "^5.23.1",
    "p-queue": "^8.1.1",
    "pg": "^8.16.3",
    "postgres": "^3.4.7",
    "react": "^18.3.0",
    "react-dom": "^18.3.0",
    "tesseract.js": "^5.1.1",
    "twilio": "^5.10.1",
    "typescript": "^5.4.0",
    "uuid": "^13.0.0",
    "wav": "^1.0.2",
    "workbox-core": "^7.3.0",
    "zod": "^3.23.8"
  },
  "optionalDependencies": {
    "speaker": "^0.5.5"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.1",
    "@supabase/ssr": "^0.7.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@tailwindcss/typography": "^0.5.16",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.0",
    "@types/js-yaml": "^4.0.9",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.18.0",
    "autoprefixer": "^10.4.21",
    "babel-jest": "^30.1.2",
    "dotenv": "^17.2.2",
    "dotenv-cli": "^10.0.0",
    "dotenv-expand": "^12.0.3",
    "eslint": "^8.57.0",
    "eslint-config-next": "14.2.0",
    "fake-indexeddb": "^6.2.2",
    "glob": "^10.4.5",
    "husky": "^9.0.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.1.2",
    "js-yaml": "^4.1.0",
    "lint-staged": "^15.0.0",
    "node-fetch": "^2.7.0",
    "node-mocks-http": "^1.17.2",
    "playwright-core": "^1.55.1",
    "postcss": "^8.5.6",
    "tailwindcss": "^4.1.11",
    "ts-jest": "^29.1.0",
    "ts-morph": "^27.0.0",
    "tsx": "^4.15.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  }
}
