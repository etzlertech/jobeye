openapi: 3.1.0
info:
  title: Scheduling & Day Plan API
  version: 1.0.0
  description: API for managing technician schedules, day plans, and route optimization

paths:
  /api/scheduling/day-plans:
    get:
      summary: List day plans
      operationId: listDayPlans
      tags: [DayPlans]
      parameters:
        - name: user_id
          in: query
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          schema:
            type: string
            format: date
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/DayPlanStatus'
      responses:
        '200':
          description: List of day plans
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DayPlan'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    
    post:
      summary: Create day plan
      operationId: createDayPlan
      tags: [DayPlans]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDayPlanRequest'
      responses:
        '201':
          description: Day plan created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayPlan'

  /api/scheduling/day-plans/{id}:
    get:
      summary: Get day plan by ID
      operationId: getDayPlan
      tags: [DayPlans]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Day plan details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayPlanWithEvents'

    patch:
      summary: Update day plan
      operationId: updateDayPlan
      tags: [DayPlans]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDayPlanRequest'
      responses:
        '200':
          description: Day plan updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayPlan'

  /api/scheduling/day-plans/{id}/optimize:
    post:
      summary: Optimize route for day plan
      operationId: optimizeDayPlan
      tags: [DayPlans]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizeRequest'
      responses:
        '200':
          description: Optimized day plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationResult'

  /api/scheduling/schedule-events:
    post:
      summary: Create schedule event
      operationId: createScheduleEvent
      tags: [ScheduleEvents]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleEventRequest'
      responses:
        '201':
          description: Schedule event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEvent'

  /api/scheduling/schedule-events/{id}:
    patch:
      summary: Update schedule event
      operationId: updateScheduleEvent
      tags: [ScheduleEvents]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleEventRequest'
      responses:
        '200':
          description: Schedule event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEvent'

  /api/scheduling/crew-assignments:
    post:
      summary: Assign crew member
      operationId: assignCrew
      tags: [CrewAssignments]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrewAssignmentRequest'
      responses:
        '201':
          description: Crew member assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrewAssignment'

components:
  schemas:
    DayPlanStatus:
      type: string
      enum: [draft, published, in_progress, completed]

    EventType:
      type: string
      enum: [job, break, travel, maintenance, meeting]

    EventStatus:
      type: string
      enum: [pending, in_progress, completed, cancelled, skipped]

    CrewRole:
      type: string
      enum: [lead, helper, trainee]

    DayPlan:
      type: object
      required: [id, company_id, user_id, plan_date, status, created_at, updated_at]
      properties:
        id:
          type: string
          format: uuid
        company_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        plan_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/DayPlanStatus'
        route_data:
          type: object
        total_distance_miles:
          type: number
        estimated_duration_minutes:
          type: integer
        actual_start_time:
          type: string
          format: date-time
        actual_end_time:
          type: string
          format: date-time
        voice_session_id:
          type: string
          format: uuid
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    DayPlanWithEvents:
      allOf:
        - $ref: '#/components/schemas/DayPlan'
        - type: object
          properties:
            events:
              type: array
              items:
                $ref: '#/components/schemas/ScheduleEvent'

    ScheduleEvent:
      type: object
      required: [id, company_id, day_plan_id, event_type, sequence_order, scheduled_start, scheduled_duration_minutes, status]
      properties:
        id:
          type: string
          format: uuid
        company_id:
          type: string
          format: uuid
        day_plan_id:
          type: string
          format: uuid
        event_type:
          $ref: '#/components/schemas/EventType'
        job_id:
          type: string
          format: uuid
        sequence_order:
          type: integer
        scheduled_start:
          type: string
          format: date-time
        scheduled_duration_minutes:
          type: integer
        actual_start:
          type: string
          format: date-time
        actual_end:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/EventStatus'
        location_data:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        address:
          type: object
        notes:
          type: string
        voice_notes:
          type: string
        crew_assignments:
          type: array
          items:
            $ref: '#/components/schemas/CrewAssignment'

    CrewAssignment:
      type: object
      required: [id, company_id, schedule_event_id, user_id, role, assigned_by, assigned_at]
      properties:
        id:
          type: string
          format: uuid
        company_id:
          type: string
          format: uuid
        schedule_event_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/CrewRole'
        assigned_by:
          type: string
          format: uuid
        assigned_at:
          type: string
          format: date-time
        confirmed_at:
          type: string
          format: date-time
        voice_confirmed:
          type: boolean

    CreateDayPlanRequest:
      type: object
      required: [user_id, plan_date]
      properties:
        user_id:
          type: string
          format: uuid
        plan_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/DayPlanStatus'
          default: draft
        metadata:
          type: object

    UpdateDayPlanRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DayPlanStatus'
        actual_start_time:
          type: string
          format: date-time
        actual_end_time:
          type: string
          format: date-time
        metadata:
          type: object

    CreateScheduleEventRequest:
      type: object
      required: [day_plan_id, event_type, sequence_order, scheduled_start, scheduled_duration_minutes]
      properties:
        day_plan_id:
          type: string
          format: uuid
        event_type:
          $ref: '#/components/schemas/EventType'
        job_id:
          type: string
          format: uuid
        sequence_order:
          type: integer
        scheduled_start:
          type: string
          format: date-time
        scheduled_duration_minutes:
          type: integer
        location_data:
          type: object
        address:
          type: object
        notes:
          type: string

    UpdateScheduleEventRequest:
      type: object
      properties:
        sequence_order:
          type: integer
        scheduled_start:
          type: string
          format: date-time
        scheduled_duration_minutes:
          type: integer
        actual_start:
          type: string
          format: date-time
        actual_end:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/EventStatus'
        notes:
          type: string
        voice_notes:
          type: string

    CreateCrewAssignmentRequest:
      type: object
      required: [schedule_event_id, user_id, role]
      properties:
        schedule_event_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/CrewRole'

    OptimizeRequest:
      type: object
      properties:
        optimization_type:
          type: string
          enum: [distance, time, balanced]
          default: balanced
        constraints:
          type: object
          properties:
            max_route_duration_minutes:
              type: integer
            honor_time_windows:
              type: boolean
            allow_resequencing:
              type: boolean

    OptimizationResult:
      type: object
      properties:
        optimized_route:
          $ref: '#/components/schemas/DayPlanWithEvents'
        improvements:
          type: object
          properties:
            distance_saved_miles:
              type: number
            time_saved_minutes:
              type: integer
            stops_reordered:
              type: integer
        optimization_metadata:
          type: object

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        hasMore:
          type: boolean